rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // --- Helper functions ---
    function isAuth() {
      return request.auth != null;
    }

    function isAdmin() {
      return isAuth() && request.auth.token.admin == true;
    }

    // --- Users collection ---
    match /users/{userId} {
      // Any authenticated user can read user profiles
      allow read: if isAuth();

      // Only the authenticated user can create/update/delete their own user document
      allow create: if isAuth() && request.auth.uid == userId;
      allow update, delete: if isAdmin() || (isAuth() && request.auth.uid == userId);
    }

    // --- Projects collection ---
    match /projects/{projectId} {
      allow read: if isAuth();
      allow create: if isAuth() && request.resource.data.creatorId == request.auth.uid;
      allow update, delete: if isAdmin() || request.auth.uid == resource.data.creatorId;

      // Likes subcollection
      match /likes/{userId} {
        allow read: if isAuth();
        allow create, delete: if isAuth() && request.auth.uid == userId;
      }
    }

    // --- Orders collection ---
    match /orders/{orderId} {
      allow create: if isAuth() &&
        (request.resource.data.studentId == request.auth.uid ||
         request.resource.data.creatorId == request.auth.uid);

      allow read, update, delete: if isAdmin() || (
        isAuth() &&
        (resource.data.studentId == request.auth.uid ||
         resource.data.creatorId == request.auth.uid)
      );
    }

    // --- Conversations + messages ---
    match /conversations/{convId} {
      allow create: if isAuth() &&
        request.auth.uid in request.resource.data.participants;

      allow read, update, delete: if isAdmin() ||
        (isAuth() && request.auth.uid in resource.data.participants);

      match /messages/{msgId} {
        allow create: if isAdmin() ||
          (isAuth() &&
           request.auth.uid in get(/databases/$(database)/documents/conversations/$(convId)).data.participants &&
           request.resource.data.senderId == request.auth.uid);

        allow read, update, delete: if isAdmin() ||
          (isAuth() &&
           request.auth.uid in get(/databases/$(database)/documents/conversations/$(convId)).data.participants);
      }
    }

    // --- Reviews collection ---
    match /reviews/{reviewId} {
      allow read: if isAuth();
      allow create: if isAuth() && request.resource.data.authorId == request.auth.uid;
      allow update, delete: if isAdmin() || request.auth.uid == resource.data.authorId;
    }

    // --- Notifications collection ---
    match /notifications/{notifId} {
      allow create: if isAuth() && request.resource.data.userId == request.auth.uid;
      allow read, update, delete: if isAdmin() || request.auth.uid == resource.data.userId;
    }

    // --- Admin-only collection ---
    match /admin/{doc=**} {
      allow read, write: if isAdmin();
    }

    // --- Deny everything else ---
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
