rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function isAuth() {
      return request.auth != null;
    }

    function isAdmin() {
      return isAuth() && request.auth.token.admin == true;
    }

    // Users collection
    match /users/{userId} {
      allow create: if isAuth() && request.auth.uid == userId;
      allow read, update, delete: if isAdmin() || (isAuth() && request.auth.uid == userId);
    }

    // Projects collection
    match /projects/{projectId} {
      allow read: if true;
      allow create: if isAuth() && request.resource.data.creatorId == request.auth.uid;
      allow delete: if isAdmin() || (isAuth() && resource.data.creatorId == request.auth.uid);
      allow update: if isAdmin() || (isAuth() && resource.data.creatorId == request.auth.uid);

      // Allow any authenticated client to update only totalLikes and totalLikesUpdatedAt
      allow update: if isAuth() &&
        request.resource.data.keys().hasOnly(resource.data.keys().union(['totalLikes','totalLikesUpdatedAt'])) &&
        request.resource.data.diff(resource.data).affectedKeys().hasOnly(['totalLikes','totalLikesUpdatedAt']) &&
        request.resource.data.totalLikes is number;

      // Likes subcollection
      match /likes/{userId} {
        allow read: if true;
        allow create: if isAuth() && request.auth.uid == userId;
        allow delete: if isAuth() && request.auth.uid == userId;
        allow update: if false;
      }
    }

    // Orders collection
    match /orders/{orderId} {
      allow create: if isAuth() && (
        request.resource.data.studentId == request.auth.uid ||
        request.resource.data.creatorId == request.auth.uid
      );
      allow read, update, delete: if isAdmin() || (
        isAuth() && (
          resource.data.studentId == request.auth.uid ||
          resource.data.creatorId == request.auth.uid
        )
      );
    }

    // Conversations and messages
    match /conversations/{convId} {
      allow read, write: if isAdmin() || (
        isAuth() && request.auth.uid in resource.data.participants
      );

      match /messages/{msgId} {
        allow create: if isAdmin() || (
          isAuth() && request.auth.uid in get(/databases/$(database)/documents/conversations/$(convId)).data.participants
        );
        allow read, update, delete: if isAdmin() || (
          isAuth() && request.auth.uid in get(/databases/$(database)/documents/conversations/$(convId)).data.participants
        );
      }
    }

    // Reviews
    match /reviews/{reviewId} {
      allow read: if true;
      allow create: if isAuth() && request.resource.data.authorId == request.auth.uid;
      allow update, delete: if isAdmin() || (isAuth() && resource.data.authorId == request.auth.uid);
    }

    // Notifications
    match /notifications/{notifId} {
      allow create: if isAdmin() || isAuth();
      allow read, update, delete: if isAdmin() || (isAuth() && resource.data.userId == request.auth.uid);
    }

    // Admin-only
    match /admin/{doc=**} {
      allow read, write: if isAdmin();
    }

    // Default deny
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
